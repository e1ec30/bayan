from itertools import chain
import angr

def flatten(list): # helper to flatten a list
    return chain.from_iterable(list)

def disassemble(func:str, proj:angr.Project):
    cfg = proj.analyses.CFGEmulated()
    if type(func) == int:
        function = cfg.functions.get_by_addr(func)
    else:
        function = cfg.functions.get(func)
    print(proj.analyses.Disassembly(function).render())
    return cfg

def hash_state(state: angr.sim_state.SimState):
    state_hash = 0
    for index, frame in enumerate(state.callstack):
        state_hash ^= frame.func_addr << index
    return state_hash
